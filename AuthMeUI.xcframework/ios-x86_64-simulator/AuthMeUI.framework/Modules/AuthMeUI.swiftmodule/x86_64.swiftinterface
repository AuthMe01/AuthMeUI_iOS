// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target x86_64-apple-ios14.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AuthMeUI
import AVFoundation
import AuthMe
@_exported import AuthMeUI
import Foundation
import Swift
import SwiftUI
import UIKit
import WebKit
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AuthMeManager : ObjectiveC.NSObject {
  @objc deinit
  public static let instance: AuthMeUI.AuthMeManager
  public func initialize(serverUrl: Swift.String, clientID: Swift.String, clientSecret: Swift.String, customerID: Swift.String, controller: UIKit.UIViewController, completion: @escaping (Swift.Result<Swift.Void, AuthMeError>) -> Swift.Void)
  public func initialize(serverUrl: Swift.String = "", token: Swift.String, controller: UIKit.UIViewController, completion: @escaping (Swift.Result<Swift.Void, AuthMeError>) -> Swift.Void)
}
extension AuthMeCaptureViewController : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @objc dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput _: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
}
public protocol AuthMeAuthenticationDelegate : ObjectiveC.NSObjectProtocol {
  func authLiveness(image: UIKit.UIImage?, error: Swift.Error?)
  func authTWLicenseResult(frontImage: UIKit.UIImage?, backImage: UIKit.UIImage?, result: TWLicenseResult?, error: Swift.Error?)
  func authTWIDResult(frontImage: UIKit.UIImage?, backImage: UIKit.UIImage?, result: TWIDResult?, error: Swift.Error?)
  func authTWHealthResult(image: UIKit.UIImage?, result: TWHealthResult?, error: Swift.Error?)
  func authMRZResult(image: UIKit.UIImage?, result: MRZResult?, error: Swift.Error?)
  func personalPrivacyResult(result: Swift.Bool)
}
extension AuthMeAuthenticationDelegate {
  public func authLiveness(image _: UIKit.UIImage?, error _: Swift.Error?)
  public func authTWLicenseResult(frontImage _: UIKit.UIImage?, backImage _: UIKit.UIImage?, result _: TWLicenseResult?, error _: Swift.Error?)
  public func authTWIDResult(frontImage _: UIKit.UIImage?, backImage _: UIKit.UIImage?, result _: TWIDResult?, error _: Swift.Error?)
  public func authTWHealthResult(image _: UIKit.UIImage?, result _: TWHealthResult?, error _: Swift.Error?)
  public func authMRZResult(image _: UIKit.UIImage?, result _: MRZResult?, error _: Swift.Error?)
  public func personalPrivacyResult(result _: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers public class AuthMeLivenessViewController : AuthMeUI.AuthMeCaptureViewController {
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func viewWillAppear(_: Swift.Bool)
  @objc override dynamic public func viewWillDisappear(_: Swift.Bool)
  @objc override dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
  @objc override dynamic public func notifyTitle(title: Swift.String)
  @objc override dynamic public func notifyMessage(message: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class AntiFakeOCRIntroViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
@objc @_inheritsConvenienceInitializers public class AuthMeOCRViewController : AuthMeUI.AuthMeCaptureViewController {
  public var cardType: OCRCardType
  public var watermark: UIKit.UIImage?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
  @objc override dynamic public func notifyTitle(title: Swift.String)
  @objc override dynamic public func notifyMessage(message: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class PersonalPrivacyViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  public var url: Foundation.URL?
  weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
@objc @_hasMissingDesignatedInitializers public class AuthMeCaptureViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @objc override dynamic public func viewDidLoad()
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
}
@objc extension AuthMeCaptureViewController : FlowDelegate {
  @objc dynamic public func score(_: Swift.String)
  @objc dynamic public func notifyTitle(title: Swift.String)
  @objc dynamic public func notifyMessage(message: Swift.String)
}
