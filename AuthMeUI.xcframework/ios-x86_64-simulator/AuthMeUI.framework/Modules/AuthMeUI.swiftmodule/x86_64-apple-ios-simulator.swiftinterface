// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AuthMeUI
import AVFoundation
import AudioToolbox
import AuthMe
@_exported import AuthMeUI
import Foundation
import ImageIO
import Swift
import UIKit
import WebKit
import _Concurrency
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class AuthMeManager : ObjectiveC.NSObject {
  @objc deinit
  public static let instance: AuthMeUI.AuthMeManager
  @available(*, deprecated, message: "This function is already deprecated and will remove after version 1.5.0, use initialize instead.")
  public func initialize(serverUrl: Swift.String = "", token: Swift.String, controller: UIKit.UIViewController, completion: @escaping (Swift.Result<Swift.Void, AuthMeError>) -> Swift.Void)
  @available(*, deprecated, message: "This function is already deprecated and will remove after version 1.5.0, use replace(accessToken: String) instead.")
  public func refresh(token: Swift.String)
  public static var version: Swift.String {
    get
  }
}
extension AuthMeUI.AuthMeCaptureViewController : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput _: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
}
public protocol AuthMeAuthenticationDelegate : ObjectiveC.NSObjectProtocol {
  func authmeLivenessViewController(_ viewController: AuthMeUI.AuthMeLivenessViewController, didRecognize result: AuthMeUI.AuthMeLivenessViewController.LivenessResult)
  func authTWLicenseResult(frontImage: UIKit.UIImage?, backImage: UIKit.UIImage?, result: TWLicenseResult?, error: Swift.Error?)
  func authTWIDResult(frontImage: UIKit.UIImage?, backImage: UIKit.UIImage?, result: TWIDResult?, error: Swift.Error?)
  func authTWHealthResult(image: UIKit.UIImage?, result: TWHealthResult?, error: Swift.Error?)
  func authMRZResult(image: UIKit.UIImage?, result: MRZResult?, error: Swift.Error?)
  func personalPrivacyResult(result: Swift.Bool)
}
extension AuthMeUI.AuthMeAuthenticationDelegate {
  public func authmeLivenessViewController(_ viewController: AuthMeUI.AuthMeLivenessViewController, didRecognize result: AuthMeUI.AuthMeLivenessViewController.LivenessResult)
  public func authTWLicenseResult(frontImage _: UIKit.UIImage?, backImage _: UIKit.UIImage?, result _: TWLicenseResult?, error _: Swift.Error?)
  public func authTWIDResult(frontImage _: UIKit.UIImage?, backImage _: UIKit.UIImage?, result _: TWIDResult?, error _: Swift.Error?)
  public func authTWHealthResult(image _: UIKit.UIImage?, result _: TWHealthResult?, error _: Swift.Error?)
  public func authMRZResult(image _: UIKit.UIImage?, result _: MRZResult?, error _: Swift.Error?)
  public func personalPrivacyResult(result _: Swift.Bool)
}
@objc @_hasMissingDesignatedInitializers @available(iOS 13.0, *)
@_Concurrency.MainActor(unsafe) public class AuthMeMyDataViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @objc deinit
}
@objc @_Concurrency.MainActor(unsafe) public class AuthMeLivenessViewController : AuthMeUI.AuthMeCaptureViewController {
  @_Concurrency.MainActor(unsafe) public init(type: AuthMeUI.AuthMeLivenessViewController.`Type`)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillDisappear(_: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func notifyTitle(title: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func notifyMessage(message: Swift.String)
  @objc deinit
}
extension AuthMeUI.AuthMeLivenessViewController {
  public enum `Type` {
    case passive
    case active
    public static func == (a: AuthMeUI.AuthMeLivenessViewController.`Type`, b: AuthMeUI.AuthMeLivenessViewController.`Type`) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
}
extension AuthMeUI.AuthMeLivenessViewController : LivenessFlowDelegate {
  @_Concurrency.MainActor(unsafe) public func livenessFlow(_ livenessFlow: LivenessFlow, didNotifyTitle title: Swift.String)
  @_Concurrency.MainActor(unsafe) public func livenessFlow(_ livenessFlow: LivenessFlow, didNotifyMessage message: Swift.String)
  @_Concurrency.MainActor(unsafe) public func livenessFlow(_ livenessFlow: LivenessFlow, didFailureWith error: LivenessFlow.FlowError, retryHandler: @escaping (() -> Swift.Void))
  @_Concurrency.MainActor(unsafe) public func livenessFlow(_ livenessFlow: LivenessFlow, didRecognize image: UIKit.UIImage)
}
extension AuthMeUI.AuthMeLivenessViewController {
  public enum LivenessResult {
    case succeed(UIKit.UIImage)
    case failed
    case canceled
  }
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class AntiFakeOCRIntroViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  @_Concurrency.MainActor(unsafe) weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @_Concurrency.MainActor(unsafe) public func closeAll()
  @_Concurrency.MainActor(unsafe) public func backToIntro()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @_Concurrency.MainActor(unsafe) @objc get
  }
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class AuthMeOCRViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public var cardType: OCRCardType
  @_Concurrency.MainActor(unsafe) public var watermark: UIKit.UIImage?
  @_Concurrency.MainActor(unsafe) weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @objc dynamic public init()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @objc deinit
}
extension AuthMeUI.AuthMeOCRViewController : AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func captureOutput(_: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from _: AVFoundation.AVCaptureConnection)
}
extension AuthMeUI.AuthMeOCRViewController : OCRFlowDelegate {
  @_Concurrency.MainActor(unsafe) public func notifyTitle(title: Swift.String)
  @_Concurrency.MainActor(unsafe) public func notifyMessage(message: Swift.String)
}
@objc extension AuthMeUI.AuthMeCaptureViewController : OCRFlowDelegate {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func notifyTitle(title: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func notifyMessage(message: Swift.String)
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class PersonalPrivacyViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  @_Concurrency.MainActor(unsafe) public var url: Foundation.URL?
  @_Concurrency.MainActor(unsafe) weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @_Concurrency.MainActor(unsafe) @objc get
  }
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) public class AuthMeCaptureViewController : UIKit.UIViewController {
  @objc dynamic public init()
  @objc deinit
  @_Concurrency.MainActor(unsafe) weak public var delegate: AuthMeUI.AuthMeAuthenticationDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
}
extension AuthMeUI.AuthMeLivenessViewController.`Type` : Swift.Equatable {}
extension AuthMeUI.AuthMeLivenessViewController.`Type` : Swift.Hashable {}
